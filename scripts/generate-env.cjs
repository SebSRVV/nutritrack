// scripts/generate-env.cjs
const fs = require('fs');
const path = require('path');

const envDir = path.resolve(process.cwd(), 'src/environments');
fs.mkdirSync(envDir, { recursive: true });

const pick = (...names) => {
  for (const n of names) {
    const v = process.env[n];
    if (typeof v === 'string' && v.trim()) return v.trim();
  }
  return '';
};

const mask = (v) => {
  if (!v) return '(vacío)';
  return v.length <= 8 ? v[0] + '***' + v.slice(-1) : v.slice(0, 4) + '***' + v.slice(-4);
};

// ===== Variables =====
const SUPABASE_URL      = pick('SUPABASE_URL', 'supabaseUrl', 'supabaseURL');
const SUPABASE_ANON_KEY = pick('SUPABASE_ANON_KEY', 'supabaseAnonKey', 'supabase_anon_key');

// Nueva: API Base URL (leer variantes)
const API_BASE_URL = pick('API_BASE_URL', 'apiBaseUrl', 'API_URL', 'api_url');

const allowMissing = process.env.ALLOW_MISSING_ENV === '1';
const missing = [];
if (!SUPABASE_URL)      missing.push('SUPABASE_URL');
if (!SUPABASE_ANON_KEY) missing.push('SUPABASE_ANON_KEY');
if (!API_BASE_URL)      missing.push('API_BASE_URL');

if (missing.length) {
  console.warn('[generate-env] ⚠️ Faltan variables:', missing.join(', '));
  if (!allowMissing) {
    console.warn('[generate-env]    (Usa ALLOW_MISSING_ENV=1 para no bloquear el build)');
  }
}

const tpl = (production) => `// AUTO-GENERATED by scripts/generate-env.cjs
export const environment = {
  production: ${production},
  supabaseUrl: ${JSON.stringify(SUPABASE_URL)},
  supabaseAnonKey: ${JSON.stringify(SUPABASE_ANON_KEY)},
  apiBaseUrl: ${JSON.stringify(API_BASE_URL)}
} as const;
`;

fs.writeFileSync(path.join(envDir, 'environment.ts'),      tpl(false));
fs.writeFileSync(path.join(envDir, 'environment.prod.ts'), tpl(true));

console.log('[generate-env] ✅ environment.ts y environment.prod.ts generados.');
console.log(`[generate-env]    Supabase URL:  ${SUPABASE_URL || '(vacío)'}`);
console.log(`[generate-env]    Supabase Key:  ${mask(SUPABASE_ANON_KEY)}`);
console.log(`[generate-env]    API Base URL:  ${API_BASE_URL || '(vacío)'}`);

if (missing.length && !allowMissing) {
  console.error('[generate-env] ❌ Build bloqueado por variables faltantes.');
  process.exit(1);
}
